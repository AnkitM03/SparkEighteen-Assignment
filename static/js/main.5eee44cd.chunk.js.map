{"version":3,"sources":["Components/Navbar.js","Components/Pagination.js","Components/Post.js","Components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","onChange","toggleMode","id","htmlFor","Pagination","postPerPage","totalPosts","paginate","pageNumber","i","Math","ceil","push","style","display","justifyContent","map","number","onClick","Post","posts","post","src","thumbnail_image","alt","event_name","event_date","paddingBottom","content","views","likes","shares","Content","useState","Data","currentpage","setCurrentpage","indexofLastPost","indexofFirstPost","currentPosts","slice","document","body","backgroundColor","e","sortby","target","value","sort","a","b","console","log","selected","disabled","length","App","setMode","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5eee44cd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Spark Eighteen\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onChange={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nexport const Pagination = ({ postPerPage, totalPosts, paginate }) => {\r\n  const pageNumber = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pageNumber.map((number) => (\r\n            <li key={number} className=\"page-item\">\r\n              <a\r\n                onClick={() => paginate(number)}\r\n                href=\"!#\"\r\n                className=\"page-link\"\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"boxicons\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\n\r\nexport const Post = ({ posts }) => {\r\n  return (\r\n    <div className=\"list-group mb-4\">\r\n      {posts.map((post) => (\r\n        <>\r\n          <div className=\"container my-6\">\r\n            <div className=\"card my-2\">\r\n              <img\r\n                src={\r\n                  !post.thumbnail_image\r\n                    ? \"https://fdn.gsmarena.com/imgroot/news/21/08/xiaomi-smart-home-india-annoucnements/-476x249w4/gsmarena_00.jpg\"\r\n                    : post.thumbnail_image\r\n                }\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">\r\n                  {post.event_name ? post.event_name : \"Unknown\"}{\" \"}\r\n                </h5>\r\n                <p className=\"card-text\">\r\n                  {post.event_date ? post.event_date : \"Unknown\"}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className=\"card-body information\"\r\n                style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\r\n              >\r\n                <div style={{ paddingBottom: \"20px\" }}>\r\n                  <Tippy content=\"Views\">\r\n                    <p className=\"card-text\">\r\n                      <i className=\"bx bxs-user\"></i>:{\" \"}\r\n                      {post.views ? post.views : \"Unknown\"}\r\n                    </p>\r\n                  </Tippy>\r\n                </div>\r\n                <div style={{ paddingBottom: \"20px\" }}>\r\n                  <Tippy content=\"Likes\">\r\n                    <p className=\"card-text\">\r\n                      <i className=\"bx bxs-like\"></i>:{\" \"}\r\n                      {post.likes ? post.likes : \"Unknown\"}\r\n                    </p>\r\n                  </Tippy>\r\n                </div>\r\n                <div style={{ paddingBottom: \"20px\" }}>\r\n                  <Tippy content=\"Shares\">\r\n                    <p className=\"card-text\">\r\n                      <i className=\"bx bxs-share\"></i>:{\" \"}\r\n                      {post.shares ? post.shares : \"Unknown\"}\r\n                    </p>\r\n                  </Tippy>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Pagination } from \"./Pagination\";\r\nimport { Post } from \"./Post\";\r\nimport Data from \"./sampleoutput.json\";\r\n\r\nconst Content = (props) => {\r\n  const [posts, setPosts] = useState(Data);\r\n  const [currentpage, setCurrentpage] = useState(1);\r\n  const [postPerPage] = useState(2);\r\n\r\n  const indexofLastPost = currentpage * postPerPage;\r\n  const indexofFirstPost = indexofLastPost - postPerPage;\r\n  const currentPosts = posts.slice(indexofFirstPost, indexofLastPost);\r\n\r\n  if (props.mode === \"light\") {\r\n    document.body.style.backgroundColor = \"#D57E7E\";\r\n  }\r\n  const paginate = (pageNumber) => {\r\n    setCurrentpage(pageNumber);\r\n  };\r\n\r\n  const sortbyFunc = (type) => {\r\n    if (type === \"Likes\") {\r\n      posts.sort((a, b) => a.likes < b.likes);\r\n    }\r\n    if (type === \"Views\") {\r\n      posts.sort((a, b) => a.views < b.views);\r\n    }\r\n    if (type === \"Shares\") {\r\n      posts.sort((a, b) => a.shares < b.shares);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* {Data.map((element) => {\r\n            return (\r\n              <div className=\"col-md-8 container\" key={element.id}>\r\n                <Contentitem\r\n                  event_name={element.event_name ? element.event_name : \"\"}\r\n                  event_date={element.event_date ? element.event_date : \"\"}\r\n                  thumbnail_image={element.thumbnail_image}\r\n                  views={element.views}\r\n                  likes={element.likes}\r\n                  shares={element.shares}\r\n                />\r\n              </div>\r\n            );\r\n          })} */}\r\n          <div className=\"container posts\">\r\n            <div>\r\n              <h1>POSTS</h1>\r\n            </div>\r\n            <div>\r\n              <select\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                onChange={(e) => {\r\n                  const sortby = e.target.value;\r\n                  sortbyFunc(sortby);\r\n                  console.log(sortby);\r\n                }}\r\n              >\r\n                <option selected disabled value=\"Sort_by\">\r\n                  Sort by\r\n                </option>\r\n                <option value=\"Likes\">Likes</option>\r\n                <option value=\"Views\">Views</option>\r\n\r\n                <option value=\"Shares\">Shares</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <Post posts={currentPosts} />\r\n        </div>\r\n      </div>\r\n      <Pagination\r\n        postPerPage={postPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport { useState } from \"react\";\nimport Content from \"./Components/Content\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#D57E7E\";\n      document.body.style.color = \"black\";\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#33506d\";\n      document.body.style.color = \"white\";\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Content mode={mode} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}